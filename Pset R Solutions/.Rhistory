summary(invest)
model <- lm(inva ~. - 1, data = invest)
summary(model)
confint(model)
robSe <- sqrt(diag(vcovHC(model,type='HC1')))
intervals <- cbind('2.5%' = coef(model) - qnorm(0.975) * robSe,
'97.5%' = coef(model) + qnorm(0.975) * robSe)
intervals
?vcov
?vovHC
robSe <- sqrt(diag(vcovHC(model,type='HC1')))
intervals <- cbind('2.5%' = coef(model) - qnorm(0.975) * robSe,
'97.5%' = coef(model) + qnorm(0.975) * robSe)
intervals
varb <- vcovHC(model,type='HC1')
b <- coef(model)
L <- matrix(c(0,1,0,0,0,1),byrow=TRUE,nrow=2)
wald.test(b=b,varb=varb,L=L)
nerlove <- read.dta13('Nerlove1963.dta') %>% log
model <- lm(Cost ~., data = nerlove)
model <- lm(cost ~., data = nerlove)
summary(model)
knitr::opts_chunk$set(echo = TRUE)
setwd('~/Documents/Grad School/Columbia/Y2/Graphical Models/PS1')
rm(list=ls())
'%&%' <- function(x,y) paste0(x,y)
library(magrittr)
library(ggplot2)
library(tidyverse)
library(MCMCpack)
library(extraDistr)
install.packages(c('tm', 'rstan', 'slam', 'shinystan', 'topicmodels'), dependencies = T)
library(tm)
library(rstan)
library(slam)
library(shinystan)
library(topicmodels)
options(mc.cores = parallel::detectCores())
#get data
data("AssociatedPress", package = "topicmodels")
#cut data
dtm = AssociatedPress[1:50,]
dtm = removeSparseTerms(dtm, 0.95)
dim(dtm)
#parameter
N_TOPICS = 2
#model
model.code =
"
data {
int<lower=2> K;               // num topics
int<lower=2> V;               // num words
int<lower=1> M;               // num docs
int<lower=1> N;               // total word instances
int<lower=1,upper=V> w[N];    // word n
int<lower=1,upper=M> doc[N];  // doc ID for word n
vector<lower=0>[K] alpha;     // topic prior
vector<lower=0>[V] beta;      // word prior
}
parameters {
simplex[K] theta[M];   // topic dist for doc m
simplex[V] phi[K];     // word dist for topic k
}
model {
for (m in 1:M)
theta[m] ~ dirichlet(alpha);  // prior
for (k in 1:K)
phi[k] ~ dirichlet(beta);     // prior
for (n in 1:N) {
real gamma[K];
for (k in 1:K)
gamma[k] = log(theta[doc[n], k]) + log(phi[k, w[n]]);
target += log_sum_exp(gamma);  // likelihood;
}
}
"
data = list(K = N_TOPICS,
V = dim(dtm)[2],
M = dim(dtm)[1],
N = sum(dtm$v),
w = rep(dtm$j,dtm$v),
doc = rep(dtm$i,dtm$v),
alpha = rep(50/N_TOPICS,N_TOPICS), #according to Griffiths and Steyvers(2004)
beta = rep(0.1,dim(dtm)[2])  #according to Griffiths and Steyvers(2004)
)
stan.model <- stan_model(model_code = model.code)
stan.model <- stan_model(model_code = model.code)
install.packages(c("tm", "topicmodels"))
install.packages(c("tm", "topicmodels"))
stan.model <- stan_model(model_code = model.code)
library(tm)
library(rstan)
library(slam)
library(shinystan)
library(topicmodels)
options(mc.cores = parallel::detectCores())
#get data
data("AssociatedPress", package = "topicmodels")
#cut data
dtm = AssociatedPress[1:50,]
dtm = removeSparseTerms(dtm, 0.95)
dim(dtm)
#parameter
N_TOPICS = 2
#model
model.code =
"
data {
int<lower=2> K;               // num topics
int<lower=2> V;               // num words
int<lower=1> M;               // num docs
int<lower=1> N;               // total word instances
int<lower=1,upper=V> w[N];    // word n
int<lower=1,upper=M> doc[N];  // doc ID for word n
vector<lower=0>[K] alpha;     // topic prior
vector<lower=0>[V] beta;      // word prior
}
parameters {
simplex[K] theta[M];   // topic dist for doc m
simplex[V] phi[K];     // word dist for topic k
}
model {
for (m in 1:M)
theta[m] ~ dirichlet(alpha);  // prior
for (k in 1:K)
phi[k] ~ dirichlet(beta);     // prior
for (n in 1:N) {
real gamma[K];
for (k in 1:K)
gamma[k] = log(theta[doc[n], k]) + log(phi[k, w[n]]);
target += log_sum_exp(gamma);  // likelihood;
}
}
"
data = list(K = N_TOPICS,
V = dim(dtm)[2],
M = dim(dtm)[1],
N = sum(dtm$v),
w = rep(dtm$j,dtm$v),
doc = rep(dtm$i,dtm$v),
alpha = rep(50/N_TOPICS,N_TOPICS), #according to Griffiths and Steyvers(2004)
beta = rep(0.1,dim(dtm)[2])  #according to Griffiths and Steyvers(2004)
)
stan.model <- stan_model(model_code = model.code)
stan.model <- stan_model(model_code = model.code)
summary(airquality)
mean(airquality$Ozone)
sd(airquality$Solar.R, na.rm = T)
complete.airquality <- na.omit(airquality)
summary(complete.airquality)
nrow(airquality)
norw(complete.airquality)
nrow(complete.airquality)
summary(airquality2)
airquality2 <- filter(airquality, is.na(Solar.R)==F)
head(airquality)
airquality2 <- filter(airquality, is.na(Solar.R)==F)
airquality <- data.frame(air.quality)
airquality <- data.frame(airquality)
airquality2 <- filter(airquality, is.na(Solar.R)==F)
head(airquality)
names(airquality)
airquality2 <- data.frame(airquality)
airquality2 <- filter(airquality2, is.na(Solar.R)==F)
airquality2 <- filter(airquality2, is.na(`Solar.R`)==F)
?filter
library(dplyr)
airquality2 <- dplyr::filter(airquality2, is.na(`Solar.R`)==F)
head(airquality)
airquality$logtemperature <- log(airquality$Temp)
head(airquality)
airquality <- mutate(airquality,
logtemperature = log(Temp),
logwind = log(Wind),
Ozonemonth = Ozone*Month,
Country = 'United States',
tempwind = logtemperature/logwind)
head(airquality)
model <- lm_robust(ozone ~ logtemperature + logwind, data = airquality, se_type = 'stata')
library(readstata13)
library(dplyr)
library(estimatr)
library(estimatr)
library(ggplot2)
library(magrittr)
library(car)
library(knitr)
library(ggplot2)
library(magrittr)
library(car)
library(knitr)
opts_chunk$set(tidy.opts = list(width.cutoff=60), tidy=TRUE)
air.model <- lm_robust(ozone ~ logtemperature + logwind, data = airquality, se_type = 'stata')
air.model <- lm_robust(Ozone ~ logtemperature + logwind, data = airquality, se_type = 'stata')
summary(air.model)
air.model$coefficients['logtemperature']
air.model$fstatistic
linearHypothesis(air.mod, c('logtemperature = 0', 'logwind = 0'))
linearHypothesis(air.model, c('logtemperature = 0', 'logwind = 0'))
linearHypothesis(air.model, c('logtemperature = 0', 'logwind = 0'))
linearHypothesis(air.model, c('logtemperature = 0', 'logwind = 0'), test = 'F')
linearHypothesis(air.model2, c('logtemperature = 0', 'logwind = 0'), test = 'F')
air.model2 <- lm(Ozone ~ logtemperature + logwind, data = airquality)
linearHypothesis(air.model2, c('logtemperature = 0', 'logwind = 0'), test = 'F')
linearHypothesis(air.model2, c('logtemperature = 0', 'logwind = 0'), white.adjust = 'hc1')
1-7177/7175*(1-0.165)
1-7177/7174*(1-0.182)
air.model$coefficients
air.model$coefficients['logtemperature']
air.model$std.error['logtemperature']
air.model$statistic['logtemperature']
earnings <- read.dta13('Earnings_and_Height.dta')
summary(earnings$sex)
setwd('~/Documents/Grad School/Columbia/Y2/Intro Metrics TA/Recitation 4')
library(readstata13)
library(dplyr)
library(estimatr)
library(ggplot2)
library(magrittr)
library(car)
library(knitr)
earnings <- read.dta13('Earnings_and_Height.dta')
summary(earnings$sex)
head(earnings)
3+3==5
3+3==5+1
3+3==5+2
(3+3==5)+2
earnings$sex <- earnings$sex == '1:male'
table(earnings$sex)
summary(earnings$sex)
all.mod <- lm_robust(earnings ~ height, data = earnings, se_type = 'stata')
summary(all.mod)
confint(all.mod, level = 0.99)
women.mod <- lm_robust(earnings ~ height,
data = filter(earnings, sex == 0),
se_type = 'stata')
summary(women.mod)
men.mod <- lm_robust(earnings ~ height,
data = filter(earnings, sex == 1),
se_type = 'stata')
summary(men.mod)
head(airquality)
mean(airquality$Ozone)
mean(airquality$Ozone, na.rm = TRUE)
sd(airquality$Solar.R, na.rm = T)
nrow(airquality)
nrow(complete.airquality)
head(airquality)
airquality$logtemperature <- log(airquality$Temp)
air.model$coefficients
air.model$coefficients['logtemperature']
air.model$coefficients[2]
air.model$std.error
air.model$statistic
earnings <- read.dta13('Earnings_and_Height.dta')
summary(earnings$sex)
summary(earnings)
summary(earnings$sex)
earnings$sex <- earnings$sex=='1:male'
summary(earnings$sex)
3==4
(3==4)+3
earnings$sex <- earnings$sex=='1:male'
summary(earnings$sex)
earnings <- read.dta13('Earnings_and_Height.dta')
earnings$sex <- earnings$sex=='1:male'
summary(earnings$sex)
all.mod <- lm_robust(earnings ~ height, data = earnings, se_type = 'stata')
all.mod <- lm_robust(earnings ~ height, data = earnings, se_type = 'stata')
summary(all.mod)
women.mod <- lm_robust(earnings ~ height,
data = filter(earnings, sex ==0),
se_type = 'stata')
summary(women.mod)
men.mod <- lm_robust(earnings ~ height,
data = filter(earnings, sex == 1),
se_type = 'stata')
summary(men.mod)
residuals(men.mod)
linearHypothesis(air.model, c('logtemperature = 0', 'logwind = 0'), test = 'F')
?lm_robust
air.model2 <- lm(Ozone ~ logtemperature + logwind, data = airquality)
air.rmse <- sqrt(mean(air.model2$residuals^2))
air.rmse
air.model$res_var
air.model$res_var %>% sqrt
#### Figures
rm(list=ls())
"%&%"<-function(x,y) paste0(x,y)
library(dplyr)
library(magrittr)
library(ggplot2)
library(plotly)
library(latticeExtra)
library(RColorBrewer)
library(grid)
library(gridExtra)
library(VGAM)
set.seed(19891216)
options(expressions = 1e5)
setwd('~/Documents/Research/DispersionProject')
#### Figure 02: Dispersion vs. temperature scatter with rugplots plus time series of country-level standard deviation ####
rm(list=ls())
load('data/output/GMFD/temppanel.Rdata')
load('data/output/baseline.Rdata')
panel <- merge(temp.panel, baseline, by = 'iso')
baseline %<>% merge(unique(panel[,c('iso', 'country')]), by = 'iso')
baseline$tsd.quant <- ntile(baseline$mean.tsd, 3) %>% factor
fig02a <- ggplot(baseline, aes(x = mean.temp, y = mean.tsd, label = country)) +
theme_bw() +
theme(legend.position = 'none') +
#geom_point(alpha = 0.5, size = 4, aes(color = tsd.quant)) +
geom_text(alpha = 0.5, size = 4, aes(color = tsd.quant)) +
xlab('Mean of annual temperature exposure (C)') + ylab('Standard deviation of annual temperature exposure (C)') +
geom_rug(alpha = 0.8, aes(color = tsd.quant)) +
geom_smooth(method='lm') +
scale_y_continuous(limits = c(0,17.5))
fig02a
#### Figures
rm(list=ls())
"%&%"<-function(x,y) paste0(x,y)
library(dplyr)
library(magrittr)
library(ggplot2)
library(plotly)
library(latticeExtra)
library(RColorBrewer)
library(grid)
library(gridExtra)
library(VGAM)
set.seed(19891216)
options(expressions = 1e5)
setwd('~/Documents/Grad School/Oxford/Thesis')
#### Figure 02: Dispersion vs. temperature scatter with rugplots plus time series of country-level standard deviation ####
rm(list=ls())
load('data/output/panel-d.Rdata')
load('data/output/baseline.Rdata')
panel <- merge(d.panel, baseline, by = 'iso')
baseline %<>% merge(unique(panel[,c('iso', 'country')]), by = 'iso')
fig02a <- ggplot(baseline, aes(x = mean.temp, y = mean.tsd, label = country)) +
theme_bw() +
geom_text(alpha = 0.5, size = 4) +
xlab('Mean of annual temperature exposure (C)') + ylab('Standard deviation of annual temperature exposure (C)') +
geom_rug(alpha = 0.8) +
scale_y_continuous(limits = c(0.5,5))
fig02b <- ggplot(panel, aes(year, tsd, fill = iso)) +
theme_bw() +
geom_line(alpha = 0.2) +
xlab('Year') + ylab('Standard deviation of temperature exposure') +
theme(legend.position='none') +
scale_y_continuous(limits = c(0.5,5))
fig02a
pdf(file = 'figures/Fig02a.pdf', width = 5, height = 5)
fig2a
dev.off()
pdf(file = 'figures/Fig02a.pdf', width = 5, height = 5)
fig02a
dev.off()
pdf(file = 'figures/Fig02a.pdf', width = 10, height = 10)
fig02a
dev.off()
pdf(file = 'figures/Fig02a.pdf', width = 7, height = 7)
fig02a
dev.off()
setwd('~/Documents/Grad School/Columbia/Y2/Intro Metrics TA/Recitation 4')
library(readstata13)
library(dplyr)
library(estimatr)
library(ggplot2)
library(magrittr)
library(car)
gpa4 <- read.dta13('GPA4.dta')
gpa.mod1 <- lm_robust(colGPA ~ hsGPA + skipped, data = gpa4, se_type = 'stata')
gpa.mod2 <- lm_robust(colGPA ~ hsGPA + skipped + PC, data = gpa4, se_type = 'stata')
gpa.mod3 <- lm_robust(colGPA ~ hsGPA + skipped + PC + bgfriend + campus, data = gpa4, se_type = 'stata')
summary(gpa.mod1)
gpa.mod1 <- lm_robust(colGPA ~ hsGPA + skipped, data = gpa4, se_type = 'stata')
gpa.mod1nr <- lm(colGPA ~ hsGPA + skipped, data = gpa4)
gpa.mod2 <- lm_robust(colGPA ~ hsGPA + skipped + PC, data = gpa4, se_type = 'stata')
gpa.mod2nr <- lm(colGPA ~ hhsGPA + skipped + PC, data = gpa4, data = gpa4)
gpa.mod3 <- lm_robust(colGPA ~ hsGPA + skipped + PC + bgfriend + campus, data = gpa4, se_type = 'stata')
gpa.mod3nr <- lm(colGPA ~ hsGPA + skipped + PC + bgfriend + campus, data = gpa4, data = gpa4)
gpa.mod3 <- lm_robust(colGPA ~ hsGPA + skipped + PC + bgfriend + campus, data = gpa4, se_type = 'stata')
gpa.mod3nr <- lm(colGPA ~ hsGPA + skipped + PC + bgfriend + campus, data = gpa4, data = gpa4)
gpa.mod2nr <- lm(colGPA ~ hhsGPA + skipped + PC, data = gpa4, data = gpa4)
gpa4 <- read.dta13('GPA4.dta')
head(gpa4)
gpa.mod1 <- lm_robust(colGPA ~ hsGPA + skipped, data = gpa4, se_type = 'stata')
gpa.mod1nr <- lm(colGPA ~ hsGPA + skipped, data = gpa4)
gpa.mod2 <- lm_robust(colGPA ~ hsGPA + skipped + PC, data = gpa4, se_type = 'stata')
gpa.mod2nr <- lm(colGPA ~ hhsGPA + skipped + PC, data = gpa4, data = gpa4)
gpa.mod2nr <- lm(colGPA ~ hhsGPA + skipped + PC, data = gpa4)
gpa.mod3 <- lm_robust(colGPA ~ hsGPA + skipped + PC + bgfriend + campus, data = gpa4, se_type = 'stata')
gpa.mod2nr <- lm(colGPA ~ hhsGPA + skipped + PC, data = gpa4)
gpa.mod3nr <- lm(colGPA ~ hsGPA + skipped + PC + bgfriend + campus, data = gpa4)
gpa4 <- read.dta13('GPA4.dta')
gpa.mod1 <- lm_robust(colGPA ~ hsGPA + skipped, data = gpa4, se_type = 'stata')
gpa.mod1nr <- lm(colGPA ~ hsGPA + skipped, data = gpa4)
gpa.mod2 <- lm_robust(colGPA ~ hsGPA + skipped + PC, data = gpa4, se_type = 'stata')
gpa.mod2nr <- lm(colGPA ~ hsGPA + skipped + PC, data = gpa4)
gpa.mod3 <- lm_robust(colGPA ~ hsGPA + skipped + PC + bgfriend + campus, data = gpa4, se_type = 'stata')
gpa.mod3nr <- lm(colGPA ~ hsGPA + skipped + PC + bgfriend + campus, data = gpa4)
summary(gpa.mod1)
mod1.rmse <- gpa.mod1nr$residuals^2 %>% mean %>% sqrt
mod1.rmse
mod3.rmse <- gpa.mod3nr$residuals^2 %>% mean %>% sqrt
gpa4 <- read.dta13('GPA4.dta')
nrow(gpa4)
na.omit(gpa4) %>% nrow
head(gpa4)
gpa4$res1 <- gpa.mod1nr$residuals
gpa4$res1^2 %>% mean %>% sqrt
sum(gpa4$res1^2)/(nrow(gpa4)-2) %>% sqrt
(sum(gpa4$res1^2)/(nrow(gpa4)-2)) %>% sqrt
(sum(gpa4$res1^2)/(nrow(gpa4)-1)) %>% sqrt
(sum(gpa4$res1^2)/(nrow(gpa4)-3)) %>% sqrt
gpa.mod1
summary(gpa.mod1)
gpa.mod1nr
summary(gpa.mod1nr)
df.residual(gpa.mod1nr)
gpa.mod1nr$terms
sigma(gpa.mod1)
sigma(gpa.mod1nr)
?sigma
air.model2 <- lm(Ozone ~ logtemperature + logwind, data = airquality) # a non-robust lm object
summary(air.model2)
airquality <- mutate(airquality,
logtemperature = log(Temp),
logwind = log(Wind),
Ozonemonth = Ozone*Month,
Country = 'United States',
tempwind = logtemperature/logwind)
head(airquality)
air.model <- lm_robust(Ozone ~ logtemperature + logwind, data = airquality, se_type = 'stata')
summary(air.model)
air.model$coefficients['logtemperature']
air.model$std.error['logwind']
air.model$statistic['(Intercept)']
air.model$fstatistic
air.model2 <- lm(Ozone ~ logtemperature + logwind, data = airquality) # a non-robust lm object
summary(air.model2)
summary(air.model)
sigma(air.model2)
sqrt(sum(air.model2$residuals^2)/(df.residual(air.model2)))
sigma(air.model)
air.model$df.residual
air.model$res_var
air.model$res_var/air.model$df.residual
sqrt(air.model$res_var/air.model$df.residual)
sqrt(air.model$res_var)/air.model$df.residual
sqrt(sum(air.model2$residuals^2)/(df.residual(air.model2)))
sqrt(sum(air.model2$residuals^2)/df.residual(air.model2))
---
title: "PS3 R Solutions"
author: "Matthew Alampay Davis"
date: "February 9, 2021"
output:
pdf_document: default
html_notebook: default
---
```{r, include = FALSE}
setwd('~/Documents/Grad School/Columbia/Y2/Intro Metrics TA/Recitation 4')
library(readstata13)
library(dplyr)
library(estimatr)
library(ggplot2)
library(magrittr)
library(car)
library(knitr)
opts_chunk$set(tidy.opts=list(width.cutoff=60),tidy=TRUE)
```
nurse <- read.dta13('WiscoNursingHome.dta') %>%
mutate(logtpy = log(tpy),
lognumbed = log(numbed),
logsqrfoot = log(sqrfoot))
nurse.2000 <- filter(nurse, cryear == 2000)
nurse.2001 <- filter(nurse, cryear == 2001)
table(nurse$cryear)
setwd('~/Documents/Grad School/Columbia/Y3/Metrics TA/Pset R Solutions')
library(readstata13)
library(dplyr)
library(estimatr)
library(estimatr)
library(ggplot2)
library(magrittr)
library(car)
library(ggplot2)
library(magrittr)
library(car)
library(knitr)
gpa.mod1 <- lm_robust(colGPA ~ hsGPA + skipped, data = gpa4, se_type = 'stata')
gpa4 <- read.dta13('GPA4.dta')
setwd()
getwd()
setwd('~/Documents/Grad School/Columbia/Y3/Metrics TA/Pset R Solutions')
getwd()
gpa4 <- read.dta13('GPA4.dta')
gpa4 <- read.dta13('GPA4.dta')
gpa.mod1 <- lm_robust(colGPA ~ hsGPA + skipped, data = gpa4, se_type = 'stata')
summary(gpa.mod1)
gpa.mod2 <- lm_robust(colGPA ~ hsGPA + skipped + PC, data = gpa4, se_type = 'stata')
gpa.mod3 <- lm_robust(colGPA ~ hsGPA + skipped + PC + bgfriend + campus, data = gpa4, se_type = 'stata')
summary(gpa.mod3)
summary(gpa.mod2)
gpa.mod1$nobs
summary(gpa.mod1)
gpa.mod1$statistic['skipped']
gpa.mod2$statistic['skipped']
gpa.mod3$statistic['skipped']
gpa.mod3$coefficients['campus']
